// Importation du module Angular Material en utilisant le chemin relatif vers node_modules
// Cela permet d'utiliser les mixins et fonctions d'Angular Material dans ce fichier SCSS.
@use '@angular/material/index' as mat;

// Inclusion du mixin core d'Angular Material.
// Ce mixin inclut les styles de base nécessaires pour Angular Material, comme la réinitialisation des styles et les styles de typographie.
@include mat.core();

// Importation d'une palette de couleurs grises personnalisée définie dans un autre fichier SCSS.
// Cette palette est utilisée pour créer le schéma de couleurs principal du thème.
@import 'styles/grey_palette';

// Définition de la palette de couleurs principale à partir de la palette grise personnalisée.
// Les paramètres 300, 50, 800 définissent respectivement la couleur principale, la couleur de contraste légère, et la couleur de contraste foncée.
$primary: mat.define-palette($grey-palette, 300, 50, 800);

// Définition de la palette de couleurs secondaire (accent) en utilisant la palette indigo par défaut d'Angular Material.
$accent: mat.define-palette(mat.$indigo-palette);

// Définition de la palette de couleurs d'avertissement en utilisant la palette rouge par défaut d'Angular Material.
$warn: mat.define-palette(mat.$red-palette);

// Création du thème personnalisé en utilisant les palettes de couleurs définies précédemment.
// Ce thème inclut également une configuration de typographie par défaut et une densité (espacement des composants) définie à 0.
$my-theme: mat.define-light-theme((
  color: (
    primary: $primary,
    accent: $accent,
    warn: $warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Application du thème personnalisé à tous les composants Angular Material.
// Cela garantit que les composants utilisent les couleurs, la typographie, et les espacements définis dans le thème personnalisé.
@include mat.all-component-themes($my-theme);
